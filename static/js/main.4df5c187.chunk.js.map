{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/Header/logo.svg","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","Button","button","TdName","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","BalanceToggleButton","Balance","div","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonclass","handleDisplayChange","handleBalanceChange","Head","header","Img","img","H1","h1","Header","src","logo","alt","Component","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setCoinData","setshowBalance","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","isBuy","balanceChange","oldBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4df5c187.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\n\nconst Td = styled.td `\n    border: 1px solid #cccccc;\n    width: 14vw;\n`\nconst TdControls = styled(Td)`\n    width: 34vw;\n`\nconst Button = styled.button `\n    font-size: 11px;\n    Width: 64px;\n    Margin: 3px 5px 0;\n`\nconst TdName =styled(Td)`\n    width: 24vw;\n`\nexport default function Coin(props){\n   \n   const handleRefresh = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n        props.handleRefresh(props.tickerId);\n        \n   } \n\n   const handleBuy = (event) => {\n    //Prevent the default action of submitting the form\n    event.preventDefault();\n    props.handleTransaction(true, props.tickerId);\n    \n   } \n\nconst handleSell = (event) => {\n    //Prevent the default action of submitting the form\n    event.preventDefault();\n    props.handleTransaction(false, props.tickerId);\n    \n   } \n    \n        return (\n            <tr> \n              <TdName>{props.name}</TdName>\n              <Td>{props.ticker}</Td>\n              <Td>${props.price}</Td>\n              <Td>{props.showBalance ? props.balance: '-'}</Td>\n              <TdControls>\n                  <form action =\"#\" method=\"POST\">\n                    <Button className= \"btn btn-info\" onClick={handleRefresh}>\n                        Refresh\n                    </Button>\n                    <Button className= \"btn btn-warning\" onClick={handleBuy}>\n                        Buy\n                    </Button>\n                    <Button className= \"btn btn-danger\" onClick={handleSell}>\n                        Sell\n                    </Button>\n                  </form>  \n              </TdControls>\n            </tr>)\n        \n}\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}\n","import React from 'react'\nimport Coin from '../Coin/Coin'\nimport styled from 'styled-components'\n\nconst Table = styled.table `\n  font-size: 1rem;\n`\n\nexport default function CoinList(props) {\n  return (\n      <Table className= \"Table table-primary table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Ticker</th>\n          <th>Price</th>\n          <th>Balance</th>\n          <th>Actions</th>\n        </tr>\n      </thead> \n      <tbody>\n        {\n          props.coinData.map( ({key,name, ticker, price, balance}) => \n            <Coin key= {key} \n            handleRefresh={props.handleRefresh}\n            handleTransaction={props.handleTransaction}\n            name= {name} \n            ticker= {ticker}\n            showBalance={props.showBalance}\n            price= {price}\n            balance={balance}\n            tickerId = {key}\n            />\n            )\n        }  \n      </tbody>\n    </Table>\n  )\n    \n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Section = styled.section `\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 2rem;\n    line-height: 3rem;\n    display: inline-block;\n\n`\nconst Button = styled.button `\n    margin: 0 8px;\n`\nconst BalanceToggleButton = styled(Button)`\n    width: 150px;\n`\n\nconst Balance = styled.div `\n    min-width: 250px;\n    margin: 0.5rem 0 0 2.5rem\n    font-size: 1.5em;\n    vertical-align: middle;\n    text-align: left;\n`\nvar formatter = Intl.NumberFormat('en-us', {\n    style: 'currency',\n    currency: 'USD'\n});\n\nexport default function AccountBalance(props){\n\n   const changeButtonstate = (event) => {\n      event.preventDefault();\n      props.handleDisplayChange(props.showBalance);\n       \n   }\n\n   const updateBalance = (event) => {\n      event.preventDefault();\n      props.handleBalanceChange();\n    \n } \n\n\n        const buttonText = props.showBalance ? 'Hide Balance': 'Show Balance';\n        let content = '\\u00A0';\n        if (props.showBalance){\n            content= <>{formatter.format(props.amount)} </>;\n        }\n        const buttonclass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info')\n        const buttonclass2 = 'btn btn-success'\n    \n        return (\n        <>\n            <Balance>{content}</Balance>\n            <Section>\n                <BalanceToggleButton onClick={changeButtonstate} className={buttonclass}>{buttonText}</BalanceToggleButton>\n                <Button onClick={updateBalance} className={buttonclass2}><i className=\"fas fa-helicopter\"></i> Add Funds </Button>\n            </Section>\n\n        </>\n        );\n    \n}\n\nAccountBalance.propTypes = { \n    amount: PropTypes.number.isRequired\n}\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport styled from 'styled-components'\n\nconst Head = styled.header `\nbackground-color: #282c34;\nmin-height: 10vh;\nwidth: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: flex-start;\ncolor: white;\n`\nconst Img = styled.img `\nheight: 8rem;\npointer-events: none;\n`\nconst H1 = styled.h1 `\nfont-size: 3rem;\nline-height: 8rem;\nfont-weight: bold;\nmin-width: 300px;\n`\n\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <Head>\n          <Img src={logo} alt=\"React logo\"/>\n          <H1>\n            Coin Exchange \n          </H1>\n        </Head>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance'\nimport Header from './components/Header/Header'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\n//import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootswatch/dist/flatly/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div `\n  text-align: center;\n  background-color: rgb(55, 119, 119);\n  color: #cccccc;\n`\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price.toFixed(4)));\n\nfunction App (props){\n  \n  const [balance,setBalance] = useState(10000);\n  const [coinData,setCoinData] = useState([]);\n  const [showBalance,setshowBalance] = useState(false);\n\n  const componentDidMount = async() => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl ='https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises)\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance:0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    })\n    //Retrieve the prices\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(() => {\n    if (coinData.length === 0){\n      componentDidMount();\n      }\n    }\n  )\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl =`https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function(values){\n    let newValues = { ...values};\n    if (valueChangeId === values.key ) {\n        newValues.price = newPrice;  \n      }\n      return newValues;\n      });\n      setCoinData(newCoinData);\n  }\n\n  const handleDisplayChange = () => {\n    setshowBalance(oldValue => !oldValue);\n}\n\n  const handleBalanceChange = () => {\n    setBalance(balance + 1200);\n  }\n  const handleTransaction = (isBuy, valueChangeId)=> {\n    var balanceChange = isBuy ? 1: -1;\n    const newCoinData = coinData.map(function(values){\n      let newValues = {...values};\n      if (valueChangeId === values.key){\n          newValues.balance += balanceChange;\n          setBalance(oldBalance => oldBalance - balanceChange * newValues.price)\n      }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n    return (\n      <Div>\n        <Header />\n        <AccountBalance \n         amount = {balance} \n         showBalance={showBalance} \n         handleDisplayChange ={handleDisplayChange}\n         handleBalanceChange = {handleBalanceChange}/>\n        <CoinList \n         coinData = {coinData} \n         handleRefresh={handleRefresh}\n         handleTransaction={handleTransaction}\n         showBalance={showBalance} />\n      </Div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}